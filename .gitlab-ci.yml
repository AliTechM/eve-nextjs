# workflow:
#   rules:
#     - if: $CI_COMMIT_BRANCH != "dev" 
#       when: never
#     - when: always 
include:
  - template: Jobs/SAST.gitlab-ci.yml

variables:
    DEV_SERVER : "35.154.63.60"
    STAGING_SERVER: "3.108.204.140"
    STAGING_SERVER_URL: "http://devs2s.vicekeeper.com:3000/"
    IMAGE_NAME: $CI_REGISTRY_IMAGE

stages:
  - Testing 
  - Build_Image
  - Push_Image 
  - Deploy_to_staging
  - Deploy_to_Prod


Test:
   stage: Testing
   script:
      - echo "testing job " 
sast:
  stage: Testing

Build_Image: 
  stage : Build_Image
  tags:
    - staging
    - server
    - shell
  before_script:
    - export PACKAGE_JSON_VERSION=$(cat package.json | jq -r .version) 
    - export IMAGE_TAG=$PACKAGE_JSON_VERSION-Build.$CI_PIPELINE_IID 
    - export IMAGE_NAME
    - echo "IMAGE_TAG=$IMAGE_TAG" >> build.env
    - echo "IMAGE_NAME=IMAGE_NAME >> build.env"
   
  script:
  - echo $IMAGE_NAME 
  - echo $IMAGE_TAG
  - docker image build -t  $IMAGE_NAME:$IMAGE_TAG . 

  artifacts:
    reports:
      dotenv: build.env

Push_Image: 
  stage : Push_Image 
  tags:
    - staging
    - server
    - shell
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
  - docker push $IMAGE_NAME:$IMAGE_TAG



Deploy_to_staging:
  stage: Deploy_to_staging
  tags:
    - staging
    - server
    - shell
  before_script:
    - chmod 400 $SSH_PRIVATE_KEY
  script:
    - scp -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY ./docker-compose.yml centos@$STAGING_SERVER:/home/centos
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY centos@$STAGING_SERVER "
        docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY &&
        export DC_IMAGE_NAME=$IMAGE_NAME && 
        export DC_IMAGE_TAG=$IMAGE_TAG &&
        docker compose down &&
        docker compose up -d"
  environment:
    name: STAGING
    url: $STAGING_SERVER_URL
